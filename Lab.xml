<?xml version="1.0" encoding="utf-8"?>
<Lab xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/ContentFramework.Core.Models">
  <Id>ASPNETMVC4DependencyInjection</Id>
  <Author>
    <Name>.</Name>
  </Author>
  <Description>In Object Oriented Programming paradigm, objects work together in a collaboration model where there are contributors and consumers. Naturally, this communication model generates dependencies between objects and components that could became difficult to manage when complexity increases.
You have probably heard about Factory Pattern and the separation between the interface and the implementation using services. However, the client objects are often responsible for service location.
Before introducing the Dependency Injection Pattern, we will explain what Inversion of Control (IoC) principle is. 
With Inversion of Control (IoC), consumer objects do not create the other objects on which they rely. Those objects come from an external source.</Description>  
  <Document ConversionType="Html">.\HOL.md</Document>
  <Title>ASP.NET MVC 4 Dependency Injection</Title>
  <Version>2.0.0</Version>
  <Source>Source</Source>
  <CustomProperties>
	<Property Name="GithHubRepository" Value="https://github.com/Microsoft-Web/HOL-MVC4DependencyInjection/" />
  </CustomProperties>   
</Lab>